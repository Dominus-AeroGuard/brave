datasource db {
  provider    = "postgresql"
  url         = env("DATABASE_URL")
  extensions  = [postgis]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

model User {
  user_id         Int           @id @default(autoincrement())
  organization_id Int
  created_at      DateTime      @default(now())
  organization    Organization  @relation(fields: [organization_id], references: [organization_id])
  applications    Application[]
  protected_area  ProtectedArea[]

  @@map("user")
}

model Organization {
  organization_id Int           @id @default(autoincrement())
  name            String        @db.VarChar(100)
  created_at      DateTime      @default(now())
  users           User[]
  pilots          Pilot[]
  applications    Application[]

  @@map("organization")
}

model Pilot {
  pilot_id        Int                @id @default(autoincrement())
  organization_id Int
  name            String             @db.VarChar(100)
  document        String             @db.VarChar(14)
  license         String             @db.VarChar(20)
  created_at      DateTime           @default(now())
  organization    Organization       @relation(fields: [organization_id], references: [organization_id])
  events          ApplicationEvent[]

  @@map("pilot")
}

model Application {
  application_id  BigInt                @id @default(autoincrement()) @db.BigInt
  user_id         Int
  organization_id Int
  vehicle         String                @db.VarChar(100)
  start_date      DateTime
  end_date        DateTime
  created_by      String                @db.VarChar(100)
  created_at      DateTime              @default(now())
  user            User                  @relation(fields: [user_id], references: [user_id])
  organization    Organization          @relation(fields: [organization_id], references: [organization_id])
  events          ApplicationEvent[]
  documents       ApplicationDocument[]

  @@index([user_id, created_at(sort: Desc)])
  @@map("application")
}

model ApplicationEvent {
  application_event_id  BigInt            @id @default(autoincrement()) @db.BigInt
  application_id        BigInt            @db.BigInt
  application_status_id Int
  pilot_id              Int
  created_by            String
  created_at            DateTime          @default(now())
  application           Application       @relation(fields: [application_id], references: [application_id])
  status                ApplicationStatus @relation(fields: [application_status_id], references: [application_status_id])
  pilot                 Pilot             @relation(fields: [pilot_id], references: [pilot_id])

  @@index([application_id, created_at(sort: Desc)])
  @@map("application_event")
}

model ApplicationStatus {
  application_status_id Int                @id @default(autoincrement())
  description           String             @db.VarChar(100)
  active                Boolean
  created_at            DateTime           @default(now())
  events                ApplicationEvent[]

  @@map("application_status")
}

model ApplicationDocument {
  application_document_id      Int                     @id @default(autoincrement())
  application_id               BigInt                  @db.BigInt
  application_document_type_id Int
  original_name                String                  @db.VarChar(200)
  data                         Json
  path                         String                  @db.VarChar(1000)
  application                  Application             @relation(fields: [application_id], references: [application_id])
  type                         ApplicationDocumentType @relation(fields: [application_document_type_id], references: [application_document_type_id])
  application_areas            ApplicationArea[]

  @@map("application_document")
}

model ApplicationDocumentType {
  application_document_type_id Int                   @id @default(autoincrement())
  description                  String                @db.VarChar(100)
  active                       Boolean
  created_at                   DateTime              @default(now())
  documents                    ApplicationDocument[]

  @@map("application_document_type")
}

model ApplicationArea {
  id                        Int                 @id @default(autoincrement())
  geom                      Unsupported("public.geometry(polygonz, 4326)")
  description               String              @db.VarChar(100)
  application_document_id   Int
  application_document      ApplicationDocument @relation(fields: [application_document_id], references: [application_document_id])          
	created_at                DateTime            @default(now())
  
  @@index([geom], name: "application_area_idx", type: Gist)
  @@map("application_area")
}

model ProtectedArea {
  id                        Int                 @id @default(autoincrement())
  geom                      Unsupported("public.geometry(polygonz, 4326)")
  description               String              @db.VarChar(100)
  user_id                   BigInt
  user                      User                @relation(fields: [user_id], references: [user_id])          
	created_at                DateTime            @default(now())
  protected_area_type_id    Int
  type                      ProtectedAreaType   @relation(fields: [protected_area_type_id], references: [protected_area_type_id])

  @@index([geom], name: "protected_area_idx", type: Gist)
	@@map("protected_area")
}

model ProtectedAreaType {
  protected_area_type_id  Int                   @id @default(autoincrement())
  description             String                @db.VarChar(100)
  created_at              DateTime              @default(now())
  protected_area          ProtectedArea[]

  @@map("protected_area_type")
}
